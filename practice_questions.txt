Q1. Create a class Program with two Main methods. Prove Main() method is entry point of the application.
Q2. WAP which takes firstname and lastname as input from the user and write that back to console.
    Use the following to print:-
    1. Concatination 2. Place holder syntax
Q3. WAP to calculate the min and max value of int,float and double.

Q4. WAP to print your name insde double quotes.
Q5. WAP to print One,Two,Three in three different lines.
Q6. WAP to print a file filepath with backslashes.
Q7. WAP to print the same path using verbatin literal.

Q8. WAP which takes two variables Number,IsNumber10. Check whether the number is 10 & print "Number == 10 is true/false"
Q9. WAP to do do the same thing using ternary operator.

Q10. WAP which ask user AreYouMajor , use has the option to say it or to not answer. Print a message according to that input.
Q11. WAP where if TicketOnSale is null then AvailableTickets will be 0, else AvailableTickets=TicketOnSale.
Q12. WAP to do the same thing using Null Coalescing Operator.

Q13. WAP to show implicit Conversion, Take an integer value and store it in a float variable.
Q14. WAP to show Explicit Conversion may result in loss of data, Take a float variable and try to store its value into an integer variable.
Q15. WAP to store a string value in a number ,use the string parse .
Q16. WAP same as above and show the example of TryParse method.

Q17. Create an array of size 3 to store first three even numbers. Print the second even number.

Q18. WAP to show XML cooments works when we hover on a particular class.

Q19. WAP which takes a number from user . If the number is between 1 to 3 then print accordingly else print "The number is not between 1 and 3".
Q20. WAP which takes a number from the user . If the number is 10 or 20 or 30 then print accordingly , using if statement.
Q21. Rewrite the same program using switch statement.
Q22. Rewrite the same program using switch but avoiding multiple case statements.

Q23. WAP following these instructions:
        - Ask the user "Which type of coffee you want?" , "1 - Small , 2 - Medium , 3 - Large "
        - If the user enters a number other than 1 - 3 , give a message "Your choice is invalid."
        - At last give user a message "Thank you for shoping with us." , "Your bill amount is TotalCoffeeCost".
Q24. Instruction Continues
        - Before Thank You message ask the user "Do you want to buy another coffee? Yes/No"
        - if answer is yes jump to starting asking which type of coffee he wants.

Q25. WAP using while loop to print even numbers upto a target number.
Q26. WAP same as above & ask "Do you want to continue - Yes/No" . According to user decesion print even number or exit.
Q27. Rewrite the coffee purchase program using do while.

Q28. WAP to store numbers 101,102,103 in an array and use a while loop to print the numbers.
Q29. Re-write the same program using for loop.
Q30. Re-write the same program using foreach.
Q31. WAP to print 1-20, put a break at 10 and again print it.
Q32. WAP to print even numbers till 20 using continue.

Q33. WAP to create an instance method that print even numbers till 20.
Q34. Re-write the same program with static method.
Q35. WAP to create an instance method which returns the sum of the provided two numbers.

Q36. WAP to create a static method(SimpleMethod) which takes one argument and change that value. In Main method print that value and show the example of pass by value parameter.
Q37. Re-write the same program to show the example of pass by Reference parameter.
Q38. WAP to return the sum and product both of two given numbers using output parameter.
Q39. WAP to return an array using parameter array.

Q40. WAP to create namespace ProjectA. Under ProjectA, create two other namespaces TeamA and TeamB . Call the static print method of ClassA.
Q41. Rewrite the same program using two assemblies for ProjectA.TeamA and ProjectA.TeamB , call the print method using namespace alliases.

Q42. WAP to create a Customer class having fields _firstName , _lastName. Create a constructor which takes this two arguments . Finally create a PrintFullName function to print the full name of Customer.
Q43. Rewrite the same program but use the default parameterless constructor to show the default firstName and lastName.
Q44. WAP to create a class Circle, its constructor will take the radius and CalculateArea function will return the area of the circle. Show Pi value should be declared static so that it doesnt take memory space every time.
Q45. Rewrite the same program and put some writelines to show static constructors are called before instance constructors.

Q46. WAP to create a class Employee having fields like FirstName, LastName, Email , and a method to PrintFullName.
        Create another class PartTimeEmployee having field HourlyRate which inherit from Employee base class.
        Create another class FullTimeEmployee having field YearlySalary which inherit from Employee base class.
        Create instance of FullTimeEmployee and PartTimeEmployee and show base class fields and method are visible to both the classes.
Q47. WAP to create a base class ParentClass and a derived class ChildClass. Show that parent class constructor get called before the child class in Inheritance.
Q48. By default base class parameterless constructor get called but we want to call the constructor of our choice.
        Create a parameterised constructor in base class which takes a message and prints the message. 
        Create an instance of child class and try to call the parent class parameterised constructor with a message "Child class controlling Parent class."

Q49. WAP to create a Employee class having fields FirstName and LastName with method PrintFullName().
        Create another class PartTimeEmployee which inherits from Employee and create a PrintFullName() here also; just concatenate the word contractor here.
        Intentionally call the base class PrintFullName method using -> base keyword, casting child class to parent, point parent class with child class

Q50. WAP to create an Employee class having fields FirstName="FN" and LastName="LN" .
        Create three more classes FullTimeEmployee, PartTimeEmployee & TemporaryEmployee inherited from Employee
        Now create an instance of Employee class and try to call the PrintFullName of respective child class methods.

Q51. Create a BaseClass with Print() method to print "Base class Print Method"
        Create a DerivedClass inheriting from BaseClass. Now create an object of BaseClass and instantiate it with DerivedClass.
        Show the difference between method Overriding & method Hiding.

Q52. WAP to overload a method Add with number and type of parameters.

Q53. WAP to create a Student class having fields like Id, Name, PassMarks. 
        Show that Id can be assigned -ve number, Name can be assigned null and PassMarks can be changed to 0.
Q54. Re-write the same program by making the fields private and creating a get and set methods to access them.
Q55. Rewrite the same program using properties.
Q56. WAP to create a struct Customer having private fields like _Id & _Name.
        public properties like Id & Name, constructor which takes Id and Name,
        method PrintDetails to print Id and Name.

Q57. WAP to show that when we copy a reference type same copy of variable gets created ie. when we try to change one it will effect the other one.
        Create a class Customer with properties Id and Name.Create to instances of Customer Class and copy one ito another.
        Now assign some value to the Name field of reference variable & print it.

Q58. Create an interface ICustomer with a Print method to print "Interface Print method."
Q59. Create two interfaces ICustomer1 & ICustomer2 having Print1() and Print2 method respectively.
        Inherit ICustomer2 with ICustomer1 and show class inheriting ICustomer1 have to provide implementation for both the Interface members.
        







